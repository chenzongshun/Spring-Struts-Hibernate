<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<!--  #hibernate.dialect org.hibernate.dialect.MySQLDialect^^^^^从etc下hibernate.properties中烤的
		#hibernate.dialect org.hibernate.dialect.MySQLInnoDBDialect
		#hibernate.dialect org.hibernate.dialect.MySQLMyISAMDialect
		#hibernate.connection.driver_class com.mysql.jdbc.Driver
		#hibernate.connection.url jdbc:mysql:///test
		#hibernate.connection.username gavin
		#hibernate.connection.password -->
<hibernate-configuration>
	<session-factory>
		<!-- 分别是数据库驱动、url、用户名、密码 -->
		<property name="hibernate.connection.driver_class"> com.mysql.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mysql:///18-02-10-HibernateFirst</property>
		<property name="hibernate.connection.username">root</property>
		<property name="hibernate.connection.password">1234</property>
		
		<!-- 指定session与当前线程绑定，就像ThreadLocal绑定的connection一样 -->
		<!-- 由于需要在service层与dao层操作同一个session，所以不得不进行这种操作 --> 
		<property name="hibernate.current_session_context_class">thread</property>
		
		
		<!-- 下面这是数据库方言
						不同的数据库中，sql语法略有区别，指定方言可以让hibernate框架在生成sql语句时，针对数据库的方言生成 
						所有的sql语句都是基于sql99标准的
						DDL：定义语言，创建表，DML：控制语言，事务，权限，DML：操纵语言，增删改查
			注意MySql在选择方言时要选择最短的那个，一定要记牢了-->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>
		
		<!-- 又是从etc下hibernate.properties中烤的Ctrl+F搜show...format..... -->
		<!-- 主要作用是hibernate可以帮我生成sql语句，是否把生成的sql显示出来 -->
		<property name="hibernate.show_sql">true</property>
		<!-- 格式化sql，就是缩进语法，没有上面那句true，这句白搭-->
		<property name="hibernate.format_sql">true</property> 
		
		<!-- 又是从etc下hibernate.properties中烤的Ctrl+F搜auto schema export，任选一个 -->
		<!--  ## auto schema export  							自动导出表结构，自动建表，表没有都会建
				#hibernate.hbm2ddl.auto create				自动建表，每次框架运行都会创建新的表。每次噢，以前的表将会被覆盖，表数据会丢失（在开发测试环境中使用）
				#hibernate.hbm2ddl.auto create-drop		自动建表，并且每次框架运行结束都会将所有表删除（开发环境中测试使用）
				#hibernate.hbm2ddl.auto update（推荐）	自动建表，如果有这个表就不会再生成，如果表有变动，就会自动更新表，比如hbm.xml里面的column属性不对应name，那么将会新加一列，老列将会保留
				#hibernate.hbm2ddl.auto validate				校验，任何情况下都不会自动建表，每次启动都会校验数据库中的表是否正确，校验失败就抛异常 -->
		<property name="hibernate.hbm2ddl.auto">update</property>

		<!-- 引入orm元素，它的路径书写：填写src下的路径，以src作为根目录 -->
		<mapping resource="com/shun/_1_one/CustomerOneTest.hbm.xml" />
		<mapping resource="com/shun/_4_LianXi/domain/Linkman.hbm.xml" />
		<mapping resource="com/shun/_4_LianXi/domain/Customer.hbm.xml" /> 
		<mapping resource="com/shun/_4_LianXi/domain/User.hbm.xml" /> 
		<mapping resource="com/shun/_4_LianXi/domain/Role.hbm.xml" /> 
	</session-factory>
</hibernate-configuration>